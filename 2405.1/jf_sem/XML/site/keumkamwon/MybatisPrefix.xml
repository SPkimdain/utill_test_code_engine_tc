<?xml version="1.0" encoding="UTF-8"?>
<!--

       Copyright 2009-2012 The MyBatis Team

       Licensed under the Apache License, Version 2.0 (the "License");
       you may not use this file except in compliance with the License.
       You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

       Unless required by applicable law or agreed to in writing, software
       distributed under the License is distributed on an "AS IS" BASIS,
       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       See the License for the specific language governing permissions and
       limitations under the License.

-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.apache.ibatis.submitted.blobtest.BlobMapper">
  <resultMap type="org.apache.ibatis.submitted.blobtest.BlobRecord" id="blobRecordResult">
    <constructor>
      <idArg column="id" javaType="_int"/>
      <arg column="blob" javaType="_byte[]"/>
    </constructor>
  </resultMap>

  <resultMap type="org.apache.ibatis.submitted.blobtest.BlobRecord" id="blobRecordResultWithBlobObjects">
    <constructor>
      <idArg column="id" javaType="_int"/>
      <arg column="blob" javaType="Byte[]"/>
    </constructor>
  </resultMap>

  <insert id="insertABC" parameterType="org.apache.ibatis.submitted.blobtest.BlobRecord">
    insert into blobtest.blobs values (#{id}, #{blob}) 
  </insert>

  <insert id="insABC" parameterType="org.apache.ibatis.submitted.blobtest.BlobRecord"> <!-- BUG -->
    insert into blobtest.blobs values (#{id}, #{blob}) 
  </insert>

  <select id="selectAll" resultMap="blobRecordResult"><!-- BUG -->
    select * from blobtest.blobs
  </select>

  <select id="getAll" resultMap="blobRecordResult">
    select * from blobtest.blobs
  </select>

  <select id="getAllWithBlobObjects" resultMap="blobRecordResultWithBlobObjects">
    select * from blobtest.blobs
  </select>
    <!-- Insert example, using the Employee parameter class -->
  <insert id="insertEmployee" parameterClass="Employee">
    insert into Employee (
      EMPNO,
      ENAME,
      HIREDATE
    )values (
      #empno#, #ename#, #hiredate#
    )
  </insert>

  <!-- Update example, using the Employee parameter class -->
  <update id="updateEmployee" parameterClass="Employee">
    update EMPLOYEE set
      EMPNO = #empno#,
      ENAME = #ename#,
      HIREDATE = #hiredate#
    where
      EMPNO = #empno#
  </update>

  <!-- Delete example, using an integer as the parameter class -->
  <delete id="deleteEmployeeByEmpno" parameterClass="int">
    delete from Employee where EMPNO = #empno#
  </delete>
    <!-- Insert example, using the Employee parameter class -->
  <insert id="insEmployee" parameterClass="Employee"><!-- BUG -->
    insert into Employee (
      EMPNO,
     ss#sempno#, #ename#, #hiredate#
    )
  </insert>

  <!-- Update example, using the Employee parameter class -->
  <update id="upEmployee" parameterClass="Employee"><!-- BUG -->
    update EMPLOYEE set
      EMPNO = #empno#,
      ENAME = #ename#,
      EMPNO = #empno#
  </update>

  <!-- Delete example, using an integer as the parameter class -->
  <delete id="delEmployeeByEmpno" parameterClass="int"><!-- BUG -->
    delete from 
  </delete>


</mapper>
